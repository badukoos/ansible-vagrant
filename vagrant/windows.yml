---
- name: create domain controller and setup active directory certificate service
  hosts: windows
  gather_facts: false
  vars:
    __marker_dir: "{{ playbook_dir }}/.vagrant/markers"
    __dc_marker:  "{{ __marker_dir }}/dc_ready"

  pre_tasks:
    - name: make absolutely sure the connection is active
      ansible.builtin.wait_for_connection:

    - name: get network connection name for private adapter
      ansible.windows.win_shell: |
        foreach ($instance in (Get-CimInstance -ClassName Win32_NetworkAdapter -Filter "NetEnabled='True'")) {
          $instance_config = Get-CimInstance -ClassName Win32_NetworkAdapterConfiguration -Filter "Index = '$($instance.Index)'"
          if ($instance_config.IPAddress -contains "{{ansible_host}}") {
            $instance.NetConnectionID
          }
        }
      changed_when: false
      register: dc_network_connection_name

    - name: fail if we didn't get a network connection name
      ansible.builtin.fail:
        msg: Failed to get the network connection name on controller
      when: dc_network_connection_name.stdout_lines | length != 1

  roles:
    - role: domain-setup
      vars:
        man_domain_setup_network_name: "{{ dc_network_connection_name.stdout_lines[0] }}"
    - role: adcs-enrollment
    - role: adcs-winrm
      vars:
        man_adcs_winrm_is_dc: true

  post_tasks:
    - name: create local file based on the certificate chain PEM content
      delegate_to: localhost
      run_once: true
      changed_when: false
      copy:
        content: "{{ out_adcs_enrollment_chain_thumbprint }}"
        dest: "{{ playbook_dir }}/ca_chain.pem"
        mode: "0644"

    - name: ensure marker directory exists on the host
      delegate_to: localhost
      run_once: true
      changed_when: false
      file:
        path: "{{ __marker_dir }}"
        state: directory
        mode: "0755"

    - name: mark domain controller as ready on the host
      delegate_to: localhost
      run_once: true
      changed_when: false
      copy:
        dest: "{{ __dc_marker }}"
        content: "***ok***\n"
        mode: "0644"

- name: connect the other Windows hosts to the domain
  hosts: "windows:!controller"
  gather_facts: false
  vars:
    __marker_dir: "{{ playbook_dir }}/.vagrant/markers"
    __dc_marker:  "{{ __marker_dir }}/dc_ready"
    __dc_ip:      "{{ hostvars[groups.controller[0]].ansible_host }}"

  pre_tasks:
    - name: wait for controller readiness marker
      delegate_to: localhost
      changed_when: false
      ansible.builtin.wait_for:
        path: "{{ __dc_marker }}"
        state: present
        sleep: 5
        timeout: 1800

    - name: make absolutely sure the connection is active
      ansible.builtin.wait_for_connection:

    - name: get network connection name for private adapter
      ansible.windows.win_shell: |
        foreach ($instance in (Get-CimInstance -ClassName Win32_NetworkAdapter -Filter "NetEnabled='True'")) {
          $instance_config = Get-CimInstance -ClassName Win32_NetworkAdapterConfiguration -Filter "Index = '$($instance.Index)'"
          if ($instance_config.IPAddress -contains "{{ ansible_host }}") {
            $instance.NetConnectionID
          }
        }
      changed_when: false
      register: network_connection_name

    - name: fail if we didn't get a client network connection name
      ansible.builtin.fail:
        msg: Failed to get the network connection name on client
      when: network_connection_name.stdout_lines | length != 1

  roles:
    - role: domain-join
      vars:
        man_domain_join_network_name: "{{ network_connection_name.stdout_lines[0] }}"
        man_domain_join_dc_ip: "{{ __dc_ip }}"
    - role: adcs-winrm
      vars:
        man_adcs_winrm_is_dc: false
