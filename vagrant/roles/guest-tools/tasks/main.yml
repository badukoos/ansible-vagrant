---
- name: Ensure spice-guest-tools is installed
  ansible.windows.win_package:
    path: "{{ spice_url }}"
    state: present
    product_id: SpiceGuestTools
    arguments:
      - "/S"
  tags: spice

- name: Ensure winfsp is installed
  ansible.windows.win_package:
    path: "{{ winfsp_url }}"
    provider: msi
    state: present

- name: Check VirtioFS exist
  ansible.windows.win_service_info:
    name: VirtioFsSvc
  register: virtiofs
  changed_when: false

- name: Install VirtIO guest tools
  when: not (virtiofs.exists | default(false))
  block:
    - name: Ensure temp directory exist
      ansible.windows.win_file:
        path: "{{ temp_dir }}"
        state: directory

    - name: Download VirtIO win guest tools msi
      ansible.windows.win_get_url:
        url: "{{ virtio_gt_url }}"
        dest: "{{ temp_dir }}\\virtio-win-gt-x64.msi"
        force: no

    # handing off install to a temporary scheduled task because winrm might lose connection if NIC resets, because it uses VirtIO
    - name: Create temporary scheduled task to run the msi
      community.windows.win_scheduled_task:
        name: "{{ virtio_task_name }}"
        description: Install virtio-win guest tools silently
        username: SYSTEM
        run_level: highest
        enabled: yes
        execution_time_limit: PT30M
        actions:
          - path: C:\Windows\System32\msiexec.exe
            arguments: /i "{{ temp_dir }}\\virtio-win-gt-x64.msi" /qn /norestart /l*v "{{ temp_dir }}\\virtio-gt-install.log"
        triggers:
          # run immediately upon task creation
          - type: registration
        state: present

    # Wait for session to come back if/when NIC resets
    - name: Wait for connection
      wait_for_connection:
        delay: 5
        timeout: 300

    - name: Check scheduled task status
      community.windows.win_scheduled_task_stat:
        name: "{{ virtio_task_name }}"
      register: task_stat
      retries: 30
      delay: 10
      until: (task_stat.task_exists is defined and (not task_stat.task_exists)) or
             (task_stat.state is defined and task_stat.state.status != "TASK_STATE_RUNNING")
      changed_when: false

    - name: Clean up temporary scheduled task
      community.windows.win_scheduled_task:
        name: "{{ virtio_task_name }}"
        state: absent
      ignore_errors: true

    - name: Clean up temp directory
      ansible.windows.win_file:
        path: "{{ temp_dir }}"
        state: absent

- name: Ensure VirtioFsSvc is started, in auto mode
  ansible.windows.win_service:
    name: VirtioFsSvc
    start_mode: auto
    state: started
